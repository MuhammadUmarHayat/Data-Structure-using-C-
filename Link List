#include <iostream>
using namespace std;

// Node structure
struct Node {
    int data;         // Data in the node
    Node* next;       // Pointer to the next node
};

// Function to add a new node at the end
void append(Node*& head, int value) {
    Node* newNode = new Node();  // Create a new node
    newNode->data = value;       // Set the data
    newNode->next = nullptr;     // Set the next pointer to null

    if (head == nullptr) {       // If list is empty, make newNode the head
        head = newNode;
    } else {
        Node* temp = head;       // Traverse to the end of the list
        while (temp->next != nullptr) {
            temp = temp->next;
        }
        temp->next = newNode;    // Link the new node at the end
    }
}

// Function to display the list
void display(Node* head) {
    Node* temp = head;
    while (temp != nullptr) {
        cout << temp->data << " -> ";
        temp = temp->next;
    }
    cout << "NULL" << endl;
}

// Main function
int main() {
    Node* head = nullptr;  // Initialize an empty list

    // Append some nodes to the list
    append(head, 10);
    append(head, 20);
    append(head, 30);

    // Display the linked list
    cout << "Linked List: ";
    display(head);

    return 0;
}
